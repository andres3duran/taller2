name: Exportar Imágenes de la NASA

on:
  push:
    branches:
      - main

jobs:
  cargar_fechas:
    runs-on: ubuntu-latest
    outputs:
      fechas: ${{ steps.cargar_fechas.outputs.fechas }}
    steps:
      - name: Revisar el repositorio
        uses: actions/checkout@v4

      - name: Cargar fechas desde JSON
        id: cargar_fechas
        run: |
          fechas=$(jq -c '.dates' dates.json)
          echo "fechas=${fechas}" >> $GITHUB_OUTPUT

  exportar_imagenes:
    runs-on: ubuntu-latest
    needs: cargar_fechas
    strategy:
      matrix:
        fecha: ${{ fromJson(needs.cargar_fechas.outputs.fechas) }}
    continue-on-error: true
    steps:
      - name: Revisar el repositorio
        uses: actions/checkout@v4

      - name: Crear directorio de caché
        run: mkdir -p cache

      - name: Obtener o crear caché para la respuesta de la API
        id: cache_api
        run: |
          fecha="${{ matrix.fecha }}"
          cache_file="cache/${fecha}.json"

          # Si el caché ya existe, lo utilizamos
          if [ -f "$cache_file" ]; then
            echo "Caché encontrado para la fecha: $fecha"
            cat "$cache_file" | jq -r '.url' > url.txt
          else
            echo "Llamando a la API de NASA para la fecha: $fecha"
            response=$(curl -s "https://api.nasa.gov/planetary/apod?api_key=${{ secrets.NASA_API_KEY }}&date=${fecha}")

            # Validar si la respuesta de la API es válida
            url=$(echo "$response" | jq -r '.url')
            if [ "$url" != "null" ]; then
              echo "$response" > "$cache_file"
              echo "$url" > url.txt
            else
              echo "No se encontró imagen para la fecha: $fecha"
              exit 0
            fi
          fi
          echo "url=$(cat url.txt)" >> $GITHUB_OUTPUT

      - name: Configurar caché para la respuesta de la API
        uses: actions/cache@v4
        with:
          path: cache
          # Clave del caché basada en la fecha y en el hash de la respuesta de la API
          key: nasa-api-${{ matrix.fecha }}-${{ hashFiles('cache/' + matrix.fecha + '.json') }}
          restore-keys: |
            nasa-api-${{ matrix.fecha }}-

      - name: Descargar imagen desde la URL
        uses: jpmens/wget@v1.0.1  # Acción para descargar la imagen
        with:
          url: ${{ steps.cache_api.outputs.url }}
          filename: images/img-${{ matrix.fecha }}.jpg

      - name: Subir imágenes como artefactos
        uses: actions/upload-artifact@v4
        with:
          name: "Imágenes de la NASA para ${{ matrix.fecha }}"
          path: images/img-${{ matrix.fecha }}.jpg
          retention-days: 1
