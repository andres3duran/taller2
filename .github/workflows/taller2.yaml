name: Exportar Imágenes de la NASA

on:
  push:
    branches:
      - main

jobs:
  cargar_fechas:
    runs-on: ubuntu-latest
    outputs:
      fechas: ${{ steps.cargar_fechas.outputs.fechas }}
    steps:
      - name: Revisar el repositorio
        uses: actions/checkout@v4

      - name: Cargar fechas desde JSON
        id: cargar_fechas
        run: |
          fechas=$(jq -r '.dates[]' dates.json | tr '\n' ' ')  # Obtener las fechas
          echo "fechas=${fechas}" >> $GITHUB_OUTPUT  # Establecer la salida

  exportar_imagenes:
    runs-on: ubuntu-latest
    needs: cargar_fechas
    strategy:
      matrix:
        fecha: ${{ fromJson(needs.cargar_fechas.outputs.fechas) }}  # Usar fechas como matriz
    continue-on-error: true
    steps:
      - name: Revisar el repositorio
        uses: actions/checkout@v4

      - name: Crear directorio de caché
        run: mkdir -p cache

      - name: Descargar imágenes
        run: |
          fecha="${{ matrix.fecha }}"  # Obtener la fecha de la matriz
          echo "Procesando fecha: $fecha"
          
          # Validar el formato de la fecha
          if [[ ! $fecha =~ ^[0-9]{4}-[0-9]{2}-[0-9]{2}$ ]]; then
            echo "Formato de fecha inválido: $fecha. Saltando."
            exit 0  # Saltar este job si el formato es inválido
          fi

          # Verificar caché
          cache_file="cache/${fecha}.json"
          if [ -f "$cache_file" ]; then
            echo "Usando datos en caché para la fecha: $fecha"
            url=$(jq -r '.url' "$cache_file")
          else
            response=$(curl -s "https://api.nasa.gov/planetary/apod?api_key=${{ secrets.NASA_API_KEY }}&date=${fecha}")
            echo "$response" > "$cache_file"
            url=$(echo "$response" | jq -r '.url')
          fi
          
          # Descargar imagen
          if [ "$url" != "null" ]; then
            echo "Descargando imagen desde $url"
            mkdir -p images
            curl -s -o "images/img-${fecha}.jpg" "$url"
          else
            echo "No se encontró imagen para la fecha: $fecha"
          fi

      - name: Subir imágenes como artefactos
        uses: actions/upload-artifact@v4
        with:
          name: "Imágenes de la NASA para ${{ matrix.fecha }}"
          path: images/img-${{ matrix.fecha }}.jpg
          retention-days: 1
